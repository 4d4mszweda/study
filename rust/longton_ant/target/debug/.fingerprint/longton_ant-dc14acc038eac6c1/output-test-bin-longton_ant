{"$message_type":"diagnostic","message":"the variable `x` is used as a loop counter","code":{"code":"clippy::explicit_counter_loop","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":9405,"byte_end":9434,"line_start":333,"line_end":333,"column_start":13,"column_end":42,"is_primary":true,"text":[{"text":"            for row in &mut grid_ref.rows {","highlight_start":13,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":9405,"byte_end":10042,"line_start":333,"line_end":349,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            for row in &mut grid_ref.rows {","highlight_start":13,"highlight_end":44},{"text":"                let mut y: u32 = 0;","highlight_start":1,"highlight_end":36},{"text":"                for cell in &mut row.cells {","highlight_start":1,"highlight_end":45},{"text":"                    let xr = x as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    let yr = y as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    if *cell != usize::max_value() {","highlight_start":1,"highlight_end":53},{"text":"                        rectangle(","highlight_start":1,"highlight_end":35},{"text":"                            ant_ref.colours[*cell].to_rgba(),","highlight_start":1,"highlight_end":62},{"text":"                            [xr, yr, square_size, square_size],","highlight_start":1,"highlight_end":64},{"text":"                            c.transform,","highlight_start":1,"highlight_end":41},{"text":"                            g,","highlight_start":1,"highlight_end":31},{"text":"                        );","highlight_start":1,"highlight_end":27},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    y += 1;","highlight_start":1,"highlight_end":28},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                x += 1;","highlight_start":1,"highlight_end":24},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`x` is of type `u32`, making it ineligible for `Iterator::enumerate`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::explicit_counter_loop)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9405,"byte_end":9434,"line_start":333,"line_end":333,"column_start":13,"column_end":42,"is_primary":true,"text":[{"text":"            for row in &mut grid_ref.rows {","highlight_start":13,"highlight_end":42}],"label":null,"suggested_replacement":"for (x, row) in (0_u32..).zip(grid_ref.rows.iter_mut())","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/main.rs","byte_start":9405,"byte_end":10042,"line_start":333,"line_end":349,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            for row in &mut grid_ref.rows {","highlight_start":13,"highlight_end":44},{"text":"                let mut y: u32 = 0;","highlight_start":1,"highlight_end":36},{"text":"                for cell in &mut row.cells {","highlight_start":1,"highlight_end":45},{"text":"                    let xr = x as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    let yr = y as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    if *cell != usize::max_value() {","highlight_start":1,"highlight_end":53},{"text":"                        rectangle(","highlight_start":1,"highlight_end":35},{"text":"                            ant_ref.colours[*cell].to_rgba(),","highlight_start":1,"highlight_end":62},{"text":"                            [xr, yr, square_size, square_size],","highlight_start":1,"highlight_end":64},{"text":"                            c.transform,","highlight_start":1,"highlight_end":41},{"text":"                            g,","highlight_start":1,"highlight_end":31},{"text":"                        );","highlight_start":1,"highlight_end":27},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    y += 1;","highlight_start":1,"highlight_end":28},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                x += 1;","highlight_start":1,"highlight_end":24},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the variable `x` is used as a loop counter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:333:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            for row in &mut grid_ref.rows {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `for (x, row) in (0_u32..).zip(grid_ref.rows.iter_mut())`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `x` is of type `u32`, making it ineligible for `Iterator::enumerate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::explicit_counter_loop)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the variable `y` is used as a loop counter","code":{"code":"clippy::explicit_counter_loop","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":9489,"byte_end":9515,"line_start":335,"line_end":335,"column_start":17,"column_end":43,"is_primary":true,"text":[{"text":"                for cell in &mut row.cells {","highlight_start":17,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":9489,"byte_end":10004,"line_start":335,"line_end":347,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                for cell in &mut row.cells {","highlight_start":17,"highlight_end":45},{"text":"                    let xr = x as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    let yr = y as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    if *cell != usize::max_value() {","highlight_start":1,"highlight_end":53},{"text":"                        rectangle(","highlight_start":1,"highlight_end":35},{"text":"                            ant_ref.colours[*cell].to_rgba(),","highlight_start":1,"highlight_end":62},{"text":"                            [xr, yr, square_size, square_size],","highlight_start":1,"highlight_end":64},{"text":"                            c.transform,","highlight_start":1,"highlight_end":41},{"text":"                            g,","highlight_start":1,"highlight_end":31},{"text":"                        );","highlight_start":1,"highlight_end":27},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    y += 1;","highlight_start":1,"highlight_end":28},{"text":"                }","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`y` is of type `u32`, making it ineligible for `Iterator::enumerate`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9489,"byte_end":9515,"line_start":335,"line_end":335,"column_start":17,"column_end":43,"is_primary":true,"text":[{"text":"                for cell in &mut row.cells {","highlight_start":17,"highlight_end":43}],"label":null,"suggested_replacement":"for (y, cell) in (0_u32..).zip(row.cells.iter_mut())","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src/main.rs","byte_start":9489,"byte_end":10004,"line_start":335,"line_end":347,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                for cell in &mut row.cells {","highlight_start":17,"highlight_end":45},{"text":"                    let xr = x as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    let yr = y as f64 * square_size;","highlight_start":1,"highlight_end":53},{"text":"                    if *cell != usize::max_value() {","highlight_start":1,"highlight_end":53},{"text":"                        rectangle(","highlight_start":1,"highlight_end":35},{"text":"                            ant_ref.colours[*cell].to_rgba(),","highlight_start":1,"highlight_end":62},{"text":"                            [xr, yr, square_size, square_size],","highlight_start":1,"highlight_end":64},{"text":"                            c.transform,","highlight_start":1,"highlight_end":41},{"text":"                            g,","highlight_start":1,"highlight_end":31},{"text":"                        );","highlight_start":1,"highlight_end":27},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    y += 1;","highlight_start":1,"highlight_end":28},{"text":"                }","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the variable `y` is used as a loop counter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:335:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                for cell in &mut row.cells {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `for (y, cell) in (0_u32..).zip(row.cells.iter_mut())`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `y` is of type `u32`, making it ineligible for `Iterator::enumerate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
